(dp1
S'output'
p2
S''
sS'layer'
p3
S'/opt/web2py/applications/images/controllers/default.py'
p4
sS'code'
p5
S'# -*- coding: utf-8 -*- \n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################  \n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    #response.flash = T(\'Welcome to web2py\')\n    #return dict(message=T(\'Hello World\'))\n    images = db().select(db.image.ALL, orderby=db.image.title)\n    return dict(images=images)\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login \n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef show():\n   image = db(db.image.id == request.args(0)).select()[0]\n   form = SQLFORM(db.comment)\n   form.vars.image_id = image.id\n   if form.accepts(request.vars, session):\n      response.flash = \'Your comment is posted\'\n   comments = db(db.comment.image_id == image_id).select()\n   return dict(image=image, comments=comments, form=form)\n   \n   \ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    session.forget()\n    return service()\n    \n\n\nresponse._vars=response._caller(show)\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/opt/web2py/gluon/restricted.py", line 173, in restricted\n    exec ccode in environment\n  File "/opt/web2py/applications/images/controllers/default.py", line 68, in <module>\n  File "/opt/web2py/gluon/globals.py", line 96, in <lambda>\n    self._caller = lambda f: f()\n  File "/opt/web2py/applications/images/controllers/default.py", line 44, in show\n    comments = db(db.comment.image_id == image_id).select()\nNameError: global name \'image_id\' is not defined\n'
p8
s.